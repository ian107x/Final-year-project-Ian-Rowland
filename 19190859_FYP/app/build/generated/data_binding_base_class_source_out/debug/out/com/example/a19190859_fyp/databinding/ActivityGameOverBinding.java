// Generated by view binder compiler. Do not edit!
package com.example.a19190859_fyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.a19190859_fyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameOverBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView gameOver;

  @NonNull
  public final LinearLayout lh;

  @NonNull
  public final Button restartgame;

  @NonNull
  public final Button returntomain;

  @NonNull
  public final Button viewdata;

  private ActivityGameOverBinding(@NonNull RelativeLayout rootView, @NonNull TextView gameOver,
      @NonNull LinearLayout lh, @NonNull Button restartgame, @NonNull Button returntomain,
      @NonNull Button viewdata) {
    this.rootView = rootView;
    this.gameOver = gameOver;
    this.lh = lh;
    this.restartgame = restartgame;
    this.returntomain = returntomain;
    this.viewdata = viewdata;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameOverBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameOverBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game_over, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameOverBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gameOver;
      TextView gameOver = ViewBindings.findChildViewById(rootView, id);
      if (gameOver == null) {
        break missingId;
      }

      id = R.id.lh;
      LinearLayout lh = ViewBindings.findChildViewById(rootView, id);
      if (lh == null) {
        break missingId;
      }

      id = R.id.restartgame;
      Button restartgame = ViewBindings.findChildViewById(rootView, id);
      if (restartgame == null) {
        break missingId;
      }

      id = R.id.returntomain;
      Button returntomain = ViewBindings.findChildViewById(rootView, id);
      if (returntomain == null) {
        break missingId;
      }

      id = R.id.viewdata;
      Button viewdata = ViewBindings.findChildViewById(rootView, id);
      if (viewdata == null) {
        break missingId;
      }

      return new ActivityGameOverBinding((RelativeLayout) rootView, gameOver, lh, restartgame,
          returntomain, viewdata);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
